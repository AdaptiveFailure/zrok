<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://zrok.io/blog</id>
    <title>Zrok Blog</title>
    <updated>2023-01-31T18:51:15.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://zrok.io/blog"/>
    <subtitle>Zrok Blog</subtitle>
    <icon>https://zrok.io/img/space-ziggy.png</icon>
    <entry>
        <title type="html"><![CDATA[Introducing zrok]]></title>
        <id>/introducing_zrok</id>
        <link href="https://zrok.io/blog/introducing_zrok"/>
        <updated>2023-01-31T18:51:15.000Z</updated>
        <summary type="html"><![CDATA[I'm fortunate that I've had the opportunity to work on many interesting projects throughout my career. I was one of the original developers who broke ground on the OpenZiti project back in 2017. Most of my work on OpenZiti centered on the fabric, data and control plane design, and designing abstractions that would support a lot of what became the "edge" layers. It's been quite exciting to watch OpenZiti blossom and grow over the years.]]></summary>
        <content type="html"><![CDATA[<p>I'm fortunate that I've had the opportunity to work on many interesting projects throughout my career. I was one of the original developers who broke ground on the <a href="https://github.com/openziti/ziti" target="_blank" rel="noopener noreferrer">OpenZiti</a> project back in 2017. Most of my work on OpenZiti centered on the <a href="https://github.com/openziti/fabric" target="_blank" rel="noopener noreferrer">fabric</a>, data and control plane design, and designing abstractions that would support a lot of what became the "edge" layers. It's been quite exciting to watch OpenZiti blossom and grow over the years. </p><p>For the last six months, I've had the opportunity to re-approach the world of zero-trust and next-generation networking from the other side of the stack. Instead of working in the lowest layers of protocols and abstractions, I'm working from the perspective of usability and enabling an amazing end-user experience. I'm excited to introduce you to a new set of tools designed to empower users at the network edge to seamlessly and transparently share resources. Imagine network sharing that is equally secure and transparent.</p><p>This new project is called... <code>zrok</code>.</p><p><code>zrok</code> focuses on streamlining sharing for both developers and end users alike. <code>zrok</code> takes inspiration from several other offerings that streamline developer endpoint sharing. Starting from that recipe, <code>zrok</code> adds powerful capabilities that are made possible by building on the foundation provided by OpenZiti.</p><p>Here are some of the things that make <code>zrok</code> different...</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="private-sharing">Private Sharing<a class="hash-link" href="#private-sharing" title="Direct link to heading">​</a></h2><p>Most of the offerings in this space allow you to easily create "tunnels" that allow outbound-only access to local HTTP resources without punching any holes in a firewall. These tools make these kinds of tunnels effortless to create; with a single command, you've got a public URL that you can share to allow access to your endpoint.</p><p><code>zrok</code> expands on this model by supporting something that we're calling "private sharing". Private sharing allows you to share securely on the zero-trust overlay network, without exposing anything to the public internet. You're still sharing with a single command, but your resources are only available to other <code>zrok</code> users through the zero-trust overlay network.</p><p>In this model, no user ever has to enable any inbound access. All network access is handled through the secure, zero-trust overlay network. <code>zrok</code> handles all of the control plane management of the overlay network, deeply simplifying the experience. This secure sharing model remains the single-command affair that users have come to expect.</p><p>And if you want public sharing, <code>zrok</code> has that also. Our private sharing modes are an additional capability that <code>zrok</code> adds to the recipe. <code>zrok</code> supports fleets of "public frontends" that can be geographically deployed wherever your internet users need them.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="files-repositories-video-decentralized">Files; Repositories; Video... Decentralized<a class="hash-link" href="#files-repositories-video-decentralized" title="Direct link to heading">​</a></h2><p>Most of the other offerings in this space are focused on sharing low-level network resources. These tools are often used by developers or operations staff to allow access to a private HTTP endpoint or to facilitate a callback to a private endpoint through a webhook. It's considered table stakes for these tools to do this in a <em>frictionless</em> way.</p><p><code>zrok</code> also provides a frictionless experience for sharing these kinds of network resources. However, we're taking it a step further... <code>zrok</code> will also make this kind of frictionless, decentralized sharing possible for files, software repositories, video streams, and other kinds of resources we haven't even thought of yet.</p><p>Combine this kind of resource sharing with our private peer-to-peer capabilities, and you've got the recipe for very powerful decentralized services. Imagine using <code>zrok</code> as a decentralized, distributed replacement for large centralized file-sharing platforms. Or use it as a replacement for large, centralized video streaming platforms.</p><p>We're still just getting started on building out these aspects of <code>zrok</code>. <code>zrok</code> already provides built-in single-command file sharing. You can <a href="https://github.com/openziti/zrok/blob/main/docs/v0.3_getting_started/getting_started.md" target="_blank" rel="noopener noreferrer">get started</a> using these powerful tools today!</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="production-zrok">Production zrok<a class="hash-link" href="#production-zrok" title="Direct link to heading">​</a></h2><p><a href="https://netfoundry.io" target="_blank" rel="noopener noreferrer">NetFoundry</a> is offering <a href="https://zrok.io" target="_blank" rel="noopener noreferrer">zrok.io</a>, a managed <code>zrok</code> service instance you can use to try out <code>zrok</code> and run small production workloads. This service is currently in limited beta and is available through an invitation process. Visit <a href="https://zrok.io" target="_blank" rel="noopener noreferrer">zrok.io</a> for details about requesting an invite.</p><p>Once <code>zrok</code> and <code>zrok.io</code> are out of beta, we'll be opening this service up to the public.</p><p><code>zrok.io</code> runs on top of the open-source version of <code>zrok</code>. We're building on top of the same open-source codebase that's <a href="https://github.com/openziti/zrok" target="_blank" rel="noopener noreferrer">available</a> today.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="open-source-self-host">Open-Source; Self-Host<a class="hash-link" href="#open-source-self-host" title="Direct link to heading">​</a></h2><p><code>zrok</code> is committed to being open-source. You've got everything you need to host your own <code>zrok</code> instance on top of your own private OpenZiti network. We've even streamlined this process, and we're including a simple <a href="https://github.com/openziti/zrok/blob/main/docs/v0.3_self_hosting_guide.md" target="_blank" rel="noopener noreferrer">guide</a> to getting this running in minutes, including the OpenZiti portions.</p><p>You can <a href="https://github.com/openziti/zrok" target="_blank" rel="noopener noreferrer">access</a> the open-source version of <code>zrok</code> today.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="a-start">A Start<a class="hash-link" href="#a-start" title="Direct link to heading">​</a></h2><p>I'm really excited about sharing <code>zrok</code> with you. As of this writing, we're at <code>v0.3.0</code>, and there is still a ton of work to do to get <code>zrok</code> to where I know it can go. <code>zrok</code> is open-source, and we're going to be developing it in public, just like the rest of the OpenZiti products (check out the <a href="https://github.com/openziti" target="_blank" rel="noopener noreferrer">OpenZiti GitHub</a>).</p><p>Starting with <code>v0.4</code>, I'm planning on producing a set of regularly-released "development notebooks", documenting the development process and giving you a look at the work we're doing with <code>zrok</code>. I'm also planning on producing a set of videos that work through some of what's involved in building your own tiny version of <code>zrok</code> on top of OpenZiti; these will be a great introduction to building a <em>Ziti Native Application</em> from the ground up. These videos will also be a comprehensive look at how <code>zrok</code> works.</p><p>We'd love your participation in the <code>zrok</code> project! You can find us on GitHub at <a href="https://github.com/openziti/zrok" target="_blank" rel="noopener noreferrer">https://github.com/openziti/zrok</a>.</p>]]></content>
    </entry>
</feed>