/**
 * zrok
 * zrok client access
 *
 * The version of the OpenAPI document: 0.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AccessRequest from '../model/AccessRequest';
import AccessResponse from '../model/AccessResponse';
import ShareRequest from '../model/ShareRequest';
import ShareResponse from '../model/ShareResponse';
import UnaccessRequest from '../model/UnaccessRequest';
import UnshareRequest from '../model/UnshareRequest';
import UpdateShareRequest from '../model/UpdateShareRequest';

/**
* Share service.
* @module api/ShareApi
* @version 0.3.0
*/
export default class ShareApi {

    /**
    * Constructs a new ShareApi. 
    * @alias module:api/ShareApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/AccessRequest} [body] 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/AccessResponse} and HTTP response
     */
    accessWithHttpInfo(opts) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['key'];
      let contentTypes = ['application/zrok.v1+json'];
      let accepts = ['application/zrok.v1+json'];
      let returnType = AccessResponse;
      return this.apiClient.callApi(
        '/access', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/AccessRequest} opts.body 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AccessResponse}
     */
    access(opts) {
      return this.accessWithHttpInfo(opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/ShareRequest} [body] 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ShareResponse} and HTTP response
     */
    shareWithHttpInfo(opts) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['key'];
      let contentTypes = ['application/zrok.v1+json'];
      let accepts = ['application/zrok.v1+json'];
      let returnType = ShareResponse;
      return this.apiClient.callApi(
        '/share', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/ShareRequest} opts.body 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ShareResponse}
     */
    share(opts) {
      return this.shareWithHttpInfo(opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/UnaccessRequest} [body] 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response
     */
    unaccessWithHttpInfo(opts) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['key'];
      let contentTypes = ['application/zrok.v1+json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/unaccess', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/UnaccessRequest} opts.body 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}
     */
    unaccess(opts) {
      return this.unaccessWithHttpInfo(opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/UnshareRequest} [body] 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response
     */
    unshareWithHttpInfo(opts) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['key'];
      let contentTypes = ['application/zrok.v1+json'];
      let accepts = ['application/zrok.v1+json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/unshare', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/UnshareRequest} opts.body 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}
     */
    unshare(opts) {
      return this.unshareWithHttpInfo(opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateShareRequest} [body] 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response
     */
    updateShareWithHttpInfo(opts) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['key'];
      let contentTypes = ['application/zrok.v1+json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/share', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateShareRequest} opts.body 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}
     */
    updateShare(opts) {
      return this.updateShareWithHttpInfo(opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
