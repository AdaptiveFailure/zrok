/**
 * zrok
 * zrok client access
 *
 * The version of the OpenAPI document: 0.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PasswordRequirements model module.
 * @module model/PasswordRequirements
 * @version 0.3.0
 */
class PasswordRequirements {
    /**
     * Constructs a new <code>PasswordRequirements</code>.
     * @alias module:model/PasswordRequirements
     */
    constructor() { 
        
        PasswordRequirements.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PasswordRequirements</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PasswordRequirements} obj Optional instance to populate.
     * @return {module:model/PasswordRequirements} The populated <code>PasswordRequirements</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PasswordRequirements();

            if (data.hasOwnProperty('length')) {
                obj['length'] = ApiClient.convertToType(data['length'], 'Number');
            }
            if (data.hasOwnProperty('requireCapital')) {
                obj['requireCapital'] = ApiClient.convertToType(data['requireCapital'], 'Boolean');
            }
            if (data.hasOwnProperty('requireNumeric')) {
                obj['requireNumeric'] = ApiClient.convertToType(data['requireNumeric'], 'Boolean');
            }
            if (data.hasOwnProperty('requireSpecial')) {
                obj['requireSpecial'] = ApiClient.convertToType(data['requireSpecial'], 'Boolean');
            }
            if (data.hasOwnProperty('validSpecialCharacters')) {
                obj['validSpecialCharacters'] = ApiClient.convertToType(data['validSpecialCharacters'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PasswordRequirements</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PasswordRequirements</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['validSpecialCharacters'] && !(typeof data['validSpecialCharacters'] === 'string' || data['validSpecialCharacters'] instanceof String)) {
            throw new Error("Expected the field `validSpecialCharacters` to be a primitive type in the JSON string but got " + data['validSpecialCharacters']);
        }

        return true;
    }


}



/**
 * @member {Number} length
 */
PasswordRequirements.prototype['length'] = undefined;

/**
 * @member {Boolean} requireCapital
 */
PasswordRequirements.prototype['requireCapital'] = undefined;

/**
 * @member {Boolean} requireNumeric
 */
PasswordRequirements.prototype['requireNumeric'] = undefined;

/**
 * @member {Boolean} requireSpecial
 */
PasswordRequirements.prototype['requireSpecial'] = undefined;

/**
 * @member {String} validSpecialCharacters
 */
PasswordRequirements.prototype['validSpecialCharacters'] = undefined;






export default PasswordRequirements;

