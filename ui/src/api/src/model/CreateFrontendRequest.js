/**
 * zrok
 * zrok client access
 *
 * The version of the OpenAPI document: 0.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateFrontendRequest model module.
 * @module model/CreateFrontendRequest
 * @version 0.3.0
 */
class CreateFrontendRequest {
    /**
     * Constructs a new <code>CreateFrontendRequest</code>.
     * @alias module:model/CreateFrontendRequest
     */
    constructor() { 
        
        CreateFrontendRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateFrontendRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateFrontendRequest} obj Optional instance to populate.
     * @return {module:model/CreateFrontendRequest} The populated <code>CreateFrontendRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateFrontendRequest();

            if (data.hasOwnProperty('zId')) {
                obj['zId'] = ApiClient.convertToType(data['zId'], 'String');
            }
            if (data.hasOwnProperty('url_template')) {
                obj['url_template'] = ApiClient.convertToType(data['url_template'], 'String');
            }
            if (data.hasOwnProperty('public_name')) {
                obj['public_name'] = ApiClient.convertToType(data['public_name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateFrontendRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateFrontendRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['zId'] && !(typeof data['zId'] === 'string' || data['zId'] instanceof String)) {
            throw new Error("Expected the field `zId` to be a primitive type in the JSON string but got " + data['zId']);
        }
        // ensure the json data is a string
        if (data['url_template'] && !(typeof data['url_template'] === 'string' || data['url_template'] instanceof String)) {
            throw new Error("Expected the field `url_template` to be a primitive type in the JSON string but got " + data['url_template']);
        }
        // ensure the json data is a string
        if (data['public_name'] && !(typeof data['public_name'] === 'string' || data['public_name'] instanceof String)) {
            throw new Error("Expected the field `public_name` to be a primitive type in the JSON string but got " + data['public_name']);
        }

        return true;
    }


}



/**
 * @member {String} zId
 */
CreateFrontendRequest.prototype['zId'] = undefined;

/**
 * @member {String} url_template
 */
CreateFrontendRequest.prototype['url_template'] = undefined;

/**
 * @member {String} public_name
 */
CreateFrontendRequest.prototype['public_name'] = undefined;






export default CreateFrontendRequest;

