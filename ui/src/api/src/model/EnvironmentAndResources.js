/**
 * zrok
 * zrok client access
 *
 * The version of the OpenAPI document: 0.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Environment from './Environment';
import Frontend from './Frontend';
import Share from './Share';

/**
 * The EnvironmentAndResources model module.
 * @module model/EnvironmentAndResources
 * @version 0.3.0
 */
class EnvironmentAndResources {
    /**
     * Constructs a new <code>EnvironmentAndResources</code>.
     * @alias module:model/EnvironmentAndResources
     */
    constructor() { 
        
        EnvironmentAndResources.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EnvironmentAndResources</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EnvironmentAndResources} obj Optional instance to populate.
     * @return {module:model/EnvironmentAndResources} The populated <code>EnvironmentAndResources</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EnvironmentAndResources();

            if (data.hasOwnProperty('environment')) {
                obj['environment'] = Environment.constructFromObject(data['environment']);
            }
            if (data.hasOwnProperty('frontends')) {
                obj['frontends'] = ApiClient.convertToType(data['frontends'], [Frontend]);
            }
            if (data.hasOwnProperty('shares')) {
                obj['shares'] = ApiClient.convertToType(data['shares'], [Share]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EnvironmentAndResources</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EnvironmentAndResources</code>.
     */
    static validateJSON(data) {
        // validate the optional field `environment`
        if (data['environment']) { // data not null
          Environment.validateJSON(data['environment']);
        }
        if (data['frontends']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['frontends'])) {
                throw new Error("Expected the field `frontends` to be an array in the JSON data but got " + data['frontends']);
            }
            // validate the optional field `frontends` (array)
            for (const item of data['frontends']) {
                Frontend.validateJSON(item);
            };
        }
        if (data['shares']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['shares'])) {
                throw new Error("Expected the field `shares` to be an array in the JSON data but got " + data['shares']);
            }
            // validate the optional field `shares` (array)
            for (const item of data['shares']) {
                Share.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {module:model/Environment} environment
 */
EnvironmentAndResources.prototype['environment'] = undefined;

/**
 * @member {Array.<module:model/Frontend>} frontends
 */
EnvironmentAndResources.prototype['frontends'] = undefined;

/**
 * @member {Array.<module:model/Share>} shares
 */
EnvironmentAndResources.prototype['shares'] = undefined;






export default EnvironmentAndResources;

